// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.Models;

namespace MusicStore.Migrations
{
    [DbContext(typeof(MusicContext))]
    [Migration("20200926224746_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicStore.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumArtUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            AlbumArtUrl = "",
                            ArtistId = 1,
                            GenreId = 1,
                            Price = 9.99m,
                            Title = "Pray for the Wicked"
                        },
                        new
                        {
                            AlbumId = 2,
                            AlbumArtUrl = "",
                            ArtistId = 1,
                            GenreId = 1,
                            Price = 7.99m,
                            Title = "Death of a Bachelor"
                        },
                        new
                        {
                            AlbumId = 3,
                            AlbumArtUrl = "",
                            ArtistId = 2,
                            GenreId = 1,
                            Price = 11.99m,
                            Title = "Origins"
                        },
                        new
                        {
                            AlbumId = 4,
                            AlbumArtUrl = "",
                            ArtistId = 2,
                            GenreId = 1,
                            Price = 9.99m,
                            Title = "Evolve"
                        },
                        new
                        {
                            AlbumId = 5,
                            AlbumArtUrl = "",
                            ArtistId = 3,
                            GenreId = 13,
                            Price = 6.99m,
                            Title = "From the Fires"
                        },
                        new
                        {
                            AlbumId = 6,
                            AlbumArtUrl = "",
                            ArtistId = 3,
                            GenreId = 13,
                            Price = 6.99m,
                            Title = "Anthem of the Peaceful Army"
                        },
                        new
                        {
                            AlbumId = 7,
                            AlbumArtUrl = "",
                            ArtistId = 5,
                            GenreId = 13,
                            Price = 14.99m,
                            Title = "Hot Rocks 1964-1971"
                        },
                        new
                        {
                            AlbumId = 8,
                            AlbumArtUrl = "",
                            ArtistId = 10,
                            GenreId = 13,
                            Price = 6.99m,
                            Title = "Rumours"
                        },
                        new
                        {
                            AlbumId = 9,
                            AlbumArtUrl = "",
                            ArtistId = 9,
                            GenreId = 12,
                            Price = 9.99m,
                            Title = "Legend"
                        },
                        new
                        {
                            AlbumId = 10,
                            AlbumArtUrl = "",
                            ArtistId = 9,
                            GenreId = 12,
                            Price = 7.99m,
                            Title = "Exodus"
                        },
                        new
                        {
                            AlbumId = 11,
                            AlbumArtUrl = "",
                            ArtistId = 7,
                            GenreId = 13,
                            Price = 10.99m,
                            Title = "Authorized Greatest Hits"
                        });
                });

            modelBuilder.Entity("MusicStore.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Name = "Panic at the Disco"
                        },
                        new
                        {
                            ArtistId = 2,
                            Name = "Imagine Dragons"
                        },
                        new
                        {
                            ArtistId = 3,
                            Name = "Greta Van Fleet"
                        },
                        new
                        {
                            ArtistId = 4,
                            Name = "Twenty One Pilots"
                        },
                        new
                        {
                            ArtistId = 5,
                            Name = "Rolling Stones"
                        },
                        new
                        {
                            ArtistId = 6,
                            Name = "Led Zepplin"
                        },
                        new
                        {
                            ArtistId = 7,
                            Name = "Cheap Trick"
                        },
                        new
                        {
                            ArtistId = 8,
                            Name = "Pink"
                        },
                        new
                        {
                            ArtistId = 9,
                            Name = "Bob Marley and the Wailers"
                        },
                        new
                        {
                            ArtistId = 10,
                            Name = "Fleetwood Mac"
                        });
                });

            modelBuilder.Entity("MusicStore.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MusicStore.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Alternative"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Blues"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Classical"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Country"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Dance"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Electronic"
                        },
                        new
                        {
                            GenreId = 7,
                            Name = "Hip Hop"
                        },
                        new
                        {
                            GenreId = 8,
                            Name = "Jazz"
                        },
                        new
                        {
                            GenreId = 9,
                            Name = "Metal"
                        },
                        new
                        {
                            GenreId = 10,
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 11,
                            Name = "R&B/Soul"
                        },
                        new
                        {
                            GenreId = 12,
                            Name = "Raggae"
                        },
                        new
                        {
                            GenreId = 13,
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("MusicStore.Models.Album", b =>
                {
                    b.HasOne("MusicStore.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicStore.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
